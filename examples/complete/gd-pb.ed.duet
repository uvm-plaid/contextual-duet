-- the command line interface we want
--
--     `duet run <this-file> "data.csv" "labels.csv" 0.05 100 0.0001 0.0001 1`
--
-- gradient descent
-- per-iteration bound
let main =  ∀ m  : ℕ,
              n  : ℕ,
              ε  : ℝ⁺,
              k  : ℕ,
              δ  : ℝ⁺,
              δ′ : ℝ⁺
              .
           pλ xs : 𝕄 [L∞, U|m, n↦𝔻 ] ,
              ys : 𝕄 [L∞, U|m, 1.0↦𝔻 ] ,
              ε  : ℝ⁺[ε],
              k  : ℕ[k],
              δ  : ℝ⁺[δ],
              δ′ : ℝ⁺[δ′],
              η  : ℝ,
              m  : ℕ[m],
              n  : ℕ[n]
              ⇒
  --TODO: capture-avoiding substitution
  --TODO: less than comparisons for sensitivities/privacies
  let m₀ = !{!{!{mcreate @ ℕ[1.0] @ n @ ℝ, <>, ℕ[1]}, <>, (cols xs)}, <>, (sλ i : 𝕀[1.0] , j : 𝕀[n] ⇒ 0.0)} in
  !{!{!{aloop @ ε @ δ @ δ′ @ k @ <xs,ys> @ <matsub,mgauss,ε,δ,θ> @ <mLipGrad,mclip>, <xs,ys>,
    (pλ θ : 𝕄 [L∞, U|1.0, n↦𝔻 ] ⇒
      g ← !{!{!{mgauss @ ε @ δ @ ℕ[1.0] @ n, <>, ε}, <>, δ}, <xs,ys>,
            (!{!{!{mLipGrad @ m @ n @ ℝ⁺[1.0] @ ℝ⁺[1.0], <θ>, θ}, <mclip,xs>, (!{mclip @ m @ n @ 𝔻, <xs>, xs})}, <ys>, ys})} ;
      return (!{!{matsub @ ℕ[1.0] @ n, <θ>, θ}, <g>, g}))}
    ,<>, m₀}
    ,<>, δ′}
in main
